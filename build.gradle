/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds/
 */

group 'com.hucat'
version '1.0-SNAPSHOT'


/**
 * buildscript不能放在subproject节点下，否则会报错，无法找到插件spring-boot
 */
buildscript {
    ext {
        springBootVersion = '1.5.10.RELEASE'
        // springBootVersion = '2.3.3.RELEASE'
        lombokVersion = "1.18.12"
    }
    repositories {
        maven { url = "http://maven.aliyun.com/nexus/content/groups/public" }
        maven { url = "http://mirrors.163.com/maven/repository/maven-public" }
        maven { url = "http://repo.spring.io/release" }
        maven { url = "http://repo.spring.io/snapshot" }
        maven { url = "http://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

/**
 * sub project
 */
subprojects {

    // Apply the java plugin to add support for Java
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'

    // Uses JDK 11
    sourceCompatibility = 1.11
    targetCompatibility = 1.11

    bootRun {
        // If System.console() return non null instance,
        // we force ANSI color support with 'always',
        // otherwise use default 'detect'.
        //jvmArgs = ['-Dspring.output.ansi.enabled=' + (System.console() ? 'always' : 'detect')]
        jvmArgs = ['-Dspring.output.ansi.enabled=always']
        systemProperties System.properties  // enable system properties passing, e.g. -Dspring.profiles.active=dev
    }

    // file encoding, equal to: java -Dfile.encoding=UTF8
    compileJava {
        options.encoding = "UTF-8"
    }

    // In this section you declare where to find the dependencies of your project
    repositories {
        maven { url = 'http://maven.aliyun.com/nexus/content/groups/public' }
        maven { url = "http://mirrors.163.com/maven/repository/maven-public" }
        maven { url = "http://repo.spring.io/release" }
    }

    // In this section you declare the dependencies for your production and test code
    dependencies {
        annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
        // Make lombok available in command line "gradle test".
        testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
        // compile phase
        compile "org.projectlombok:lombok:${lombokVersion}"
        compile 'junit:junit:4.12'
        // Fix up error NoClassDefFoundError: javax.activation.MimetypesFileTypeMap in jdk above jdk9
        compile 'javax.activation:activation:1.1.1'

        // test phase
        testCompile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
    }

    // make resource out dir from "build/resources" to "build/classes" to make idea can read resources from classpath
    sourceSets {
        main {
            output.resourcesDir = 'build/classes/main'
            // make mybatis mapper.xml under the java package available (include src/main/java to resources tasks)
            resources {
                srcDir 'src/main/java'
            }
        }
    }

    task wrapper(type: Wrapper) {
        gradleVersion = '5.6.4'
    }

    // compile warning check
    compileJava.options.compilerArgs = ['-Xlint:unchecked','-Xlint:deprecation']

    test {
        // Enable logging info showed in the console, which mainly determined by "standardOut" event
        testLogging {
            events "passed", "skipped", "failed", "standardOut", "standardError"
        }
    }
}
